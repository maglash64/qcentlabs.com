<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>qcentlabs</title>
    <link>http://qcentlabs.com/</link>
    <description>Recent content on qcentlabs</description>
    <image>
      <url>http://qcentlabs.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://qcentlabs.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Jun 2023 01:15:13 +0530</lastBuildDate><atom:link href="http://qcentlabs.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Making my own Programmer/Debugger using ARM SWD.</title>
      <link>http://qcentlabs.com/posts/swd_banger/</link>
      <pubDate>Tue, 27 Jun 2023 01:15:13 +0530</pubDate>
      
      <guid>http://qcentlabs.com/posts/swd_banger/</guid>
      <description>So, recently at my day job our team needed to develop a PCB test JIG for mass manufacturing/testing of the assembled PCBs.
To increase the efficiency of this test process, the idea of testing and programming multiple boards at once came into my mind.
Initially I thought of using multiple Debuggers/Programmers to flash code into multiple boards at once, but as you know, most of these debuggers aren&amp;rsquo;t cheap.
Except for ST-link V2 clones which are available at dirt cheap prices, all other debuggers cost at least 10s of dollars and from then on special mass production versions of J-link can go on for 1000s of dollars not including professional software that you need to purchase separately for flash programming in a manufacturing setting.</description>
    </item>
    
    <item>
      <title>Machine Learning on Microcontrollers.</title>
      <link>http://qcentlabs.com/posts/ml_on_mcu/</link>
      <pubDate>Thu, 02 Mar 2023 04:21:11 +0530</pubDate>
      
      <guid>http://qcentlabs.com/posts/ml_on_mcu/</guid>
      <description>The Rise of Machine(s) &amp;ldquo;The AI revolution in 2023 brought transformative changes to industries and daily life. Intelligent automation and advanced algorithms improved efficiency in manufacturing, healthcare, finance, and transportation. Natural language processing has led to the emergence of sophisticated voice assistants. Breakthroughs in image recognition and sentiment analysis revolutionised fields like autonomous vehicles, cybersecurity, and personalised marketing.&amp;rdquo;
Well, I didn&amp;rsquo;t write any of it, ChatGPT did.
So today we are going to explore if we can take advantage of machine learning to help build better embedded systems.</description>
    </item>
    
    <item>
      <title>Exploring GPUs in Microcontrollers.</title>
      <link>http://qcentlabs.com/posts/gpu_in_mcu/</link>
      <pubDate>Tue, 28 Feb 2023 01:11:06 +0530</pubDate>
      
      <guid>http://qcentlabs.com/posts/gpu_in_mcu/</guid>
      <description>When was the last time you heard about GPUs and MCUs in a sentence?
Well, today we are going to talk about how the landscape is changing in the embedded world with the introduction of more and more powerful microcontrolers, some of which even feature dedicated GPUs for accelerating graphics processing!
A lot of modern problems require low power solutions with rich graphical interfaces, People have become accustomed to rich UIs due to the smartphone revolution, and thus expectations of smart devices around us to have fluid smartphone like UIs have become a trend.</description>
    </item>
    
    <item>
      <title>IMXRT, The Fastest GPIO Toggler in Town.</title>
      <link>http://qcentlabs.com/posts/fast_gpio/</link>
      <pubDate>Sat, 14 Jan 2023 03:19:12 +0530</pubDate>
      
      <guid>http://qcentlabs.com/posts/fast_gpio/</guid>
      <description>Speed, I am Speed&amp;hellip;. So what&amp;rsquo;s the first thing you do when you get a new microcontroller to play with?
Blink an LED, of course!
And for that, you toggle a GPIO&amp;hellip;
So now the question is how fast can your MCU toggle that juicy GPIO?
Recently, NXP sent me samples of their IMXRT Series of crossover MCUs.
These include the MIMXRT1172,MIMXRT1166,MIMXRT595 along with a devkit for the MIMXRT1166!
Now If you have not been living under a rock for the past few years (or are not into embedded systems in general),</description>
    </item>
    
    <item>
      <title>Hacking a Synaptics touchpad.</title>
      <link>http://qcentlabs.com/posts/synaptics_hack/</link>
      <pubDate>Mon, 19 Dec 2022 01:09:32 +0530</pubDate>
      
      <guid>http://qcentlabs.com/posts/synaptics_hack/</guid>
      <description>The Backstory: I&amp;rsquo;ve had a few laptops over the years, and one of the first things I do whenever I&amp;rsquo;ve got a new piece of hardware is open it up.
Well, I live in India, and the environment here is quite dusty, so this act of opening and cleaning happens quite often.
Unfortunately, if you own a laptop with a plastic body, this becomes quite an issue, as plastic body laptops have knurled nuts pushed into the body, the plastic housings of these nuts tend to break over time if you regularly screw and unscrew.</description>
    </item>
    
    <item>
      <title>Making an Arduino Killer.</title>
      <link>http://qcentlabs.com/posts/mimxrt1010/</link>
      <pubDate>Sat, 19 Feb 2022 10:12:39 +0530</pubDate>
      
      <guid>http://qcentlabs.com/posts/mimxrt1010/</guid>
      <description>So few years ago NXP released a new series of MCU&amp;rsquo;s called &amp;ldquo;Cortex M on Steroids&amp;rdquo;.
Yeah, right.. They(NXP) weren&amp;rsquo;t joking when they released the IMX RT series of MCUs.
These are called crossover MCUs because they lie in between Application processors and normal MCUs,
Almost all of them feature atleast an ARM Cortex M7 core clocked at 500Mhz(some at 1Ghz+) or above for the consumer version.
Some like MIMXRT1160/1170 also include a ARM Cortex M4 alongside the 1Ghz M7!</description>
    </item>
    
    <item>
      <title>Hacking Logitech G402 Mouse to make a Camera!</title>
      <link>http://qcentlabs.com/posts/g402_hack/</link>
      <pubDate>Wed, 19 Jan 2022 04:52:39 +0530</pubDate>
      
      <guid>http://qcentlabs.com/posts/g402_hack/</guid>
      <description>Soo&amp;hellip;some time ago(like maybe 1-2 years?), I saw a video on youtube by the 8-bit guy where he showed how an optical mouse works.
He showed a really old mouse and was able to connect it to an old computer which ran BASIC. The he wrote a progam in BASIC to pixel grab data out of the sensor and display it on screen.
I was really amazed by this, But the image produced was very crude and the frame rate was very slow (more like spf instead of fps).</description>
    </item>
    
    <item>
      <title>STM32F103 Custom USB.</title>
      <link>http://qcentlabs.com/posts/stm32usb/</link>
      <pubDate>Fri, 19 Nov 2021 01:12:36 +0530</pubDate>
      
      <guid>http://qcentlabs.com/posts/stm32usb/</guid>
      <description>Recently i got into USB device driver development for linux, I&amp;rsquo;ve always wanted to know how USB works at hardware as well as software level.
So i fired up google and looked up for USB specifications, and general documentation for it.
The best resource&amp;rsquo;s on the internet that i found were www.usbmadesimple.co.uk and the book USB complete by Jan Alexson.
The guys at usbmadesimple.co.uk explained the gist of USB in a very easy to understand manner, I highly recommend anyone going into USB to give it a go, then the book USB Complete gives detailed overview of every concept.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://qcentlabs.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://qcentlabs.com/about/</guid>
      <description>Hi!
My name is Ankit Sharma, and I am an embedded systems engineer!
I made this blog to share my journey as I explore the nooks and crannies of hardware and software.
I have a keen interest in knowingÂ how things work under the hood.</description>
    </item>
    
  </channel>
</rss>
